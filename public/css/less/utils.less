//Fonts
@import url(https://fonts.googleapis.com/css?family=Merriweather:400,700,400italic);

@font-site: 'Merriweather', serif;
@font-awesome: 'Font Awesome';
@font-face {
	font-family: @font-awesome;
	src: url('fonts/fontawesome.eot');
	src: url('fonts/fontawesome.eot?#iefix') format('embedded-opentype'),
	url('fonts/fontawesome.svg') format('svg'),
	url('fonts/fontawesome.woff') format('woff');
}

//Global Colors
@color-white: #fff;
@color-black: #000;
@color-orange: #f15b40;
@color-ocean: #02c1bb;
@color-purple: #8f75f1;
@color-blue: #516274;
@color-gray: #464646; //#909398
@color-borders: #292929;
@color-footer-border: #e6e6e6;
@color-linked-in: #1b86bc;
@color-field-border: #808080;

//Work
@color-box-sample-from: #505050;
@color-box-sample-to: #171717;
@color-box-sample-border: #424242;

//Shadows
.shadow-text{
	text-shadow: 4px 2px 10px #4a4a4a;
}

.shadow-box{
    box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.5);
}

//Media Queries
.media-mobile(@styles) {
	@media screen and (max-width: 768px) {
		@styles();
	}
}

.media-tablet(@styles) {
	@media screen and (max-width: 1024px) {
		@styles();
	}
}


//Functions
.clear {
	&:after {
		clear: both;
		content: '';
		display: table;
	}
}

.awesome-icon(@charcode, @position: after, @size: inherit, @vertical-align: middle, @margin-top: null, @margin-right: null, @margin-bottom: null, @margin-left: null, @margin: null) {
	& when (@position = after) {
		&:after {
			font-family: @font-awesome;
			font-style: normal;
			text-shadow: none;
			font-size: @size;
			content: @charcode;
			vertical-align: @vertical-align;

			&when not(@margin-top = null) {
				margin-top: @margin-top;
			}

			&when not(@margin-right = null) {
				margin-right: @margin-right;
			}

			&when not(@margin-bottom = null) {
				margin-bottom: @margin-bottom;
			}

			&when not(@margin-left = null) {
				margin-left: @margin-left;
			}

			&when not(@margin = null) {
				margin: @margin;
			}
		}
	}

	&when (@position = before) {
		&:before {
			font-family: @font-awesome;
			font-style: normal;
			font-size: @size;
			content: @charcode;
			vertical-align: @vertical-align;

			&when not (@margin-top = null) {
				margin-top: @margin-top;
			}

			&when not (@margin-right = null) {
				margin-right: @margin-right;
			}

			&when not (@margin-bottom = null) {
				margin-bottom: @margin-bottom;
			}

			&when not (@margin-left = null) {
				margin-left: @margin-left;
			}

			&when not (@margin = null) {
				margin: @margin;
			}
		}
	}
}


.gradient(@colorFrom, @colorTo){
	background: @colorFrom; 
    background: -webkit-linear-gradient(@colorFrom, @colorTo); 
    background: -o-linear-gradient(@colorFrom, @colorTo);
    background: -moz-linear-gradient(@colorFrom, @colorTo);
    background: linear-gradient(@colorFrom, @colorTo); 
}

.user-select(@value) {
	-webkit-user-select: @value;
	-moz-user-select: @value;
	-khtml-user-select: @value;
	-ms-user-select: @value;
}

.appearance(@value) {
	-webkit-appearance: @value;
	-moz-appearance: @value;
	appearance: @value;
}

.transition(@value) {
	-webkit-transition: @value;
	-moz-transition: @value;
	transition: @value;
}

.transform(@value) {
	-webkit-transform: @value;
	-moz-transform: @value;
	transform: @value;
}

.filter(@value) {
	-webkit-filter: @value;
	-moz-filter: @value;
	filter: @value;
}

.animation(@name, @duration: null, @delay: null, @direction: null, @iterationCount: null, @fillMode: null, @timingFunction: null) {
	-moz-animation-name: @name;
	-webkit-animation-name: @name;
	animation-name: @name;

	&when not (@duration = null) {
		-moz-animation-duration: @duration;
		-webkit-animation-duration: @duration;
		animation-duration: @duration;
	}

	&when not (@delay = null) {
		-moz-animation-delay: @delay;
		-webkit-animation-delay: @delay;
		animation-delay: @delay;
	}

	&when not (@direction = null) {
		-moz-animation-direction: @direction;
		-webkit-animation-direction: @direction;
		animation-direction: @direction;
	}

	&when not (@iterationCount = null) {
		-moz-animation-iteration-count: @iterationCount;
		-webkit-animation-iteration-count: @iterationCount;
		animation-iteration-count: @iterationCount;
	}

	&when not (@fillMode = null) {
		-moz-animation-fill-mode: @fillMode;
		-webkit-animation-fill-mode: @fillMode;
		animation-fill-mode: @fillMode;
	}

	&when not (@timingFunction = null) {
		-moz-animation-timing-function: @timingFunction;
		-webkit-animation-timing-function: @timingFunction;
		animation-timing-function: @timingFunction;
	}
}

.keyframes(@name, @steps) {
	@-moz-keyframes @name {
		@steps();
	}

	@-webkit-keyframes @name {
		@steps();
	}

	@keyframes @name {
		@steps();
	}
}